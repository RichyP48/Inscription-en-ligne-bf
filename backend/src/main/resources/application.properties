spring.application.name=register


# Generate using: openssl rand -base64 64
app.jwt.secret=VGhpcyBpcyBhIHZlcnkgc2VjdXJlIGFuZCBsb25nIGJhc2U2NCBlbmNvZGVkIHNlY3JldCBrZXkgZm9yIEpXVC4gUmVwbGFjZSBtZSE=

app.jwt.expiration-ms=3600000

# Replace with your actual PostgreSQL connection details
spring.datasource.url=jdbc:postgresql://localhost:5432/registration
spring.datasource.username=postgres
spring.datasource.password=pkf
spring.datasource.driver-class-name=org.postgresql.Driver


spring.jpa.hibernate.ddl-auto=update
# Set to false in production
spring.jpa.show-sql=true


# Replace with your actual Google Client ID and Secret
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}




app.file-storage.upload-dir=./uploads/registration-docs


spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=10MB

# Replace with your actual SMTP server details
spring.mail.host=smtp.example.com
spring.mail.port=587
spring.mail.username=your-email@example.com
spring.mail.password=your-email-password

# Common Mail Properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true # Use true for TLS
# spring.mail.properties.mail.smtp.ssl.enable=true # Use true for SSL (usually port 465)
spring.mail.properties.mail.transport.protocol=smtp



# Email for the default admin user created on startup if it doesn't exist
app.admin.email=admin@example.com
# Password for the default admin user (CHANGE THIS IN PRODUCTION!)
app.admin.password=adminpassword
